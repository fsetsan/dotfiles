{"version":3,"file":"page.js","mappings":"27DAWO,MAAMA,EACT,WAAAC,CAAYC,EAAQC,GAChBC,KAAKF,OAASA,EACdE,KAAKD,IAAMA,CACf,CACA,WAAAE,GACI,QAA2BC,IAAvBF,KAAKF,OAAOK,OACZ,OAEJ,MAAMC,EAAIC,SAASC,cAAc,UACjCF,EAAEG,IAAMC,OAAOC,QAAQC,OAAO,SAASV,KAAKF,OAAOK,UACnDC,EAAEO,OAAS,IAAMP,EAAEQ,UAClBP,SAASQ,MAAQR,SAASS,iBAAiBC,YAAYX,EAC5D,CACA,YAAAY,CAAaC,GACT,QAA2Bf,IAAvBF,KAAKF,OAAOoB,OACZ,OAAO,EAEX,QAAiChB,IAA7BF,KAAKF,OAAOoB,OAAOC,OAAuBF,EAAQG,UAAUC,SAASrB,KAAKF,OAAOoB,OAAOC,OACxF,OAAO,EAEX,QAAiCjB,IAA7BF,KAAKF,OAAOoB,OAAOI,MACnB,IAAK,MAAMC,KAAOC,OAAOC,KAAKzB,KAAKF,OAAOoB,OAAOI,OAC7C,GAAIL,EAAQK,MAAMC,KAASvB,KAAKF,OAAOoB,OAAOI,MAAMC,GAChD,OAAO,EAInB,OAAO,CACX,CACA,WAAAG,CAAYT,GACR,YAAiCf,IAAzBF,KAAKF,OAAO6B,UAChB3B,KAAKF,OAAO6B,SAASC,eACe1B,IAAnCF,KAAKF,OAAO6B,SAASE,WAA2BZ,EAAQa,KAAO9B,KAAKF,OAAO6B,SAASE,kBAClD3B,IAAlCF,KAAKF,OAAO6B,SAASI,UAA0B,IAAIC,OAAOhC,KAAKF,OAAO6B,SAASI,UAAUE,KAAKhB,EAAQV,KAC/G,CACA,WAAA2B,GACI,IAAIC,GAAY,EACZC,GAAY,EAOhB,OANIpC,KAAKF,OAAOuC,OACZF,EAAY,IAAIH,OAAOhC,KAAKF,OAAOuC,MAAMJ,KAAKjC,KAAKD,IAAIsC,OAEvDrC,KAAKF,OAAOwC,OACZF,EAAY,IAAIJ,OAAOhC,KAAKF,OAAOwC,MAAML,KAAKjC,KAAKD,IAAIwC,WAEpDJ,GAAaC,CACxB,GAxDG,WACH,MAAMI,EAAS,IAAIC,IAAIC,OAAOC,SAASC,MACvC,IAAK,MAAMC,KAAQ,IAEf,GADc,IAAIb,OAAOa,EAAKC,MACpBb,KAAKO,EAAOM,MAClB,OAAO,IAAIlD,EAAaiD,EAAML,EAI1C,ECTAO,IAAuB9C,a","sources":["webpack://@project/extension/./src/services/pages.ts","webpack://@project/extension/./src/page.ts"],"sourcesContent":["import pagesConfig from '../pages.json';\nexport function currentPageDelegate() {\n    const urlObj = new URL(window.location.href);\n    for (const page of pagesConfig.pages) {\n        const regex = new RegExp(page.host);\n        if (regex.test(urlObj.host)) {\n            return new PageDelegate(page, urlObj);\n        }\n    }\n    return undefined;\n}\nexport class PageDelegate {\n    constructor(config, url) {\n        this.config = config;\n        this.url = url;\n    }\n    loadScripts() {\n        if (this.config.script === undefined) {\n            return;\n        }\n        const s = document.createElement('script');\n        s.src = chrome.runtime.getURL(`pages/${this.config.script}`);\n        s.onload = () => s.remove();\n        (document.head || document.documentElement).appendChild(s);\n    }\n    shouldIgnore(element) {\n        if (this.config.ignore === undefined) {\n            return false;\n        }\n        if (this.config.ignore.class !== undefined && element.classList.contains(this.config.ignore.class)) {\n            return true;\n        }\n        if (this.config.ignore.style !== undefined) {\n            for (const key of Object.keys(this.config.ignore.style)) {\n                if (element.style[key] === this.config.ignore.style[key]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    canAutoSync(element) {\n        return (this.config.autoSync !== undefined &&\n            this.config.autoSync.enabled &&\n            (this.config.autoSync.elementId === undefined || element.id === this.config.autoSync.elementId) &&\n            (this.config.autoSync.videoSrc === undefined || new RegExp(this.config.autoSync.videoSrc).test(element.src)));\n    }\n    isVideoPage() {\n        var hashMatch = true;\n        var pathMatch = true;\n        if (this.config.hash) {\n            hashMatch = new RegExp(this.config.hash).test(this.url.hash);\n        }\n        if (this.config.path) {\n            pathMatch = new RegExp(this.config.path).test(this.url.pathname);\n        }\n        return hashMatch && pathMatch;\n    }\n}\n","import { currentPageDelegate } from './services/pages';\ncurrentPageDelegate()?.loadScripts();\n"],"names":["PageDelegate","constructor","config","url","this","loadScripts","undefined","script","s","document","createElement","src","chrome","runtime","getURL","onload","remove","head","documentElement","appendChild","shouldIgnore","element","ignore","class","classList","contains","style","key","Object","keys","canAutoSync","autoSync","enabled","elementId","id","videoSrc","RegExp","test","isVideoPage","hashMatch","pathMatch","hash","path","pathname","urlObj","URL","window","location","href","page","host","currentPageDelegate"],"sourceRoot":""}