{"version":3,"file":"/pages/unext-page.js","mappings":"mBACAA,YAAW,KACP,IAAIC,EACJ,MAAMC,EAAgBC,KAAKC,MAC3BD,KAAKC,MAAQ,WAET,MAAMC,EAAQH,EAAcI,MAAMC,KAAMC,WACxC,GAA4D,iBAAjDH,GAAOI,MAAMC,sBAAsBC,YAC1CV,EAAWI,EAAMI,KAAKC,qBAAqBC,UACgB,iBAAhDN,EAAMI,KAAKC,qBAAqBE,SAASC,IAAiB,CACjE,MAAMC,EAAYT,EAAMI,KAAKC,qBAAqBE,QAAQC,GAC1D,GAAiE,iBAAtDR,EAAMI,KAAKM,8BAA8BC,UAChDC,MAAMC,QAAQb,EAAMI,KAAKM,6BAA6BC,UACtD,IAAK,MAAMG,KAAOd,EAAMI,KAAKM,6BAA6BC,SACtD,GAAIG,EAAIN,KAAOC,EAAW,CACO,iBAAlBK,EAAIC,YACXnB,EAAW,GAAGA,KAAYkB,EAAIC,aAEH,iBAApBD,EAAIE,cACXpB,EAAW,GAAGA,KAAYkB,EAAIE,eAElC,KACJ,CAGZ,CAEJ,OAAOhB,CACX,EACAiB,SAASC,iBAAiB,6BAA6B,KAC9CtB,GAULqB,SAASE,cAAc,IAAIC,YAAY,wBAAyB,CAC5DC,OAAQ,CACJC,MAAO,GACPC,SAAU3B,EACV4B,UAAW,OAGnB5B,OAAW6B,GAhBPR,SAASE,cAAc,IAAIC,YAAY,wBAAyB,CAC5DC,OAAQ,CACJC,MAAO,GACPC,SAAU,GACVC,UAAW,MAYH,IACrB,EAAM,GACV,E","sources":["webpack://@project/extension/./src/pages/unext-page.ts"],"sourcesContent":["\"use strict\";\nsetTimeout(() => {\n    let baseName;\n    const originalParse = JSON.parse;\n    JSON.parse = function () {\n        // @ts-ignore\n        const value = originalParse.apply(this, arguments);\n        if (typeof value?.data?.webfront_title_stage?.titleName === 'string') {\n            baseName = value.data.webfront_title_stage.titleName;\n            if (typeof value.data.webfront_title_stage.episode?.id === 'string') {\n                const episodeId = value.data.webfront_title_stage.episode.id;\n                if (typeof value.data.webfront_title_titleEpisodes?.episodes === 'object' &&\n                    Array.isArray(value.data.webfront_title_titleEpisodes.episodes)) {\n                    for (const obj of value.data.webfront_title_titleEpisodes.episodes) {\n                        if (obj.id === episodeId) {\n                            if (typeof obj.displayNo === 'string') {\n                                baseName = `${baseName} ${obj.displayNo}`;\n                            }\n                            if (typeof obj.episodeName === 'string') {\n                                baseName = `${baseName} ${obj.episodeName}`;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    document.addEventListener('asbplayer-get-synced-data', () => {\n        if (!baseName) {\n            document.dispatchEvent(new CustomEvent('asbplayer-synced-data', {\n                detail: {\n                    error: '',\n                    basename: '',\n                    subtitles: [],\n                },\n            }));\n            return;\n        }\n        document.dispatchEvent(new CustomEvent('asbplayer-synced-data', {\n            detail: {\n                error: '',\n                basename: baseName,\n                subtitles: [],\n            },\n        }));\n        baseName = undefined;\n    }, false);\n}, 0);\n"],"names":["setTimeout","baseName","originalParse","JSON","parse","value","apply","this","arguments","data","webfront_title_stage","titleName","episode","id","episodeId","webfront_title_titleEpisodes","episodes","Array","isArray","obj","displayNo","episodeName","document","addEventListener","dispatchEvent","CustomEvent","detail","error","basename","subtitles","undefined"],"sourceRoot":""}