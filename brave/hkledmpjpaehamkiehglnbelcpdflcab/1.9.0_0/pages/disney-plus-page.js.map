{"version":3,"file":"/pages/disney-plus-page.js","mappings":"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","sources":["webpack://@project/extension/../node_modules/global/window.js","webpack://@project/extension/./src/pages/util.ts","webpack://@project/extension/webpack/bootstrap","webpack://@project/extension/webpack/runtime/compat get default export","webpack://@project/extension/webpack/runtime/define property getters","webpack://@project/extension/webpack/runtime/global","webpack://@project/extension/webpack/runtime/hasOwnProperty shorthand","webpack://@project/extension/../node_modules/@videojs/vhs-utils/es/stream.js","webpack://@project/extension/../node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@project/extension/../node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://@project/extension/../node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://@project/extension/./src/pages/disney-plus-page.ts"],"sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","export function extractExtension(url, fallback) {\n    const dotIndex = url.lastIndexOf('.');\n    let extension = fallback;\n    if (dotIndex !== -1) {\n        extension = url.substring(dotIndex + 1);\n        // Account for case when URL has a query parameter\n        const questionMarkIndex = extension.indexOf('?');\n        if (questionMarkIndex !== -1) {\n            extension = extension.substring(0, questionMarkIndex);\n        }\n    }\n    return extension;\n}\nexport function poll(test, timeout = 10000) {\n    return new Promise(async (resolve, reject) => {\n        if (test()) {\n            resolve(true);\n        }\n        const t0 = Date.now();\n        let passed = false;\n        while (!passed && Date.now() < t0 + timeout) {\n            await new Promise((loopResolve) => {\n                setTimeout(() => {\n                    passed = test();\n                    loopResolve();\n                }, 1000);\n            });\n        }\n        resolve(passed);\n    });\n}\nexport const trackFromDef = (def) => {\n    return { id: trackId(def), ...def };\n};\nexport const trackId = (def) => {\n    return `${def.language}:${def.label}:${def.url}`;\n};\nexport function inferTracks({ onJson, onRequest, waitForBasename }) {\n    setTimeout(() => {\n        const subtitlesByPath = {};\n        let basename = '';\n        let trackDataRequestHandled = false;\n        if (onJson !== undefined) {\n            const originalParse = JSON.parse;\n            JSON.parse = function () {\n                // @ts-ignore\n                const value = originalParse.apply(this, arguments);\n                let tracksFound = false;\n                let basenameFound = false;\n                onJson?.(value, (track) => {\n                    const path = window.location.pathname;\n                    if (typeof subtitlesByPath[path] === 'undefined') {\n                        subtitlesByPath[path] = [];\n                    }\n                    const newId = trackId(track);\n                    if (subtitlesByPath[path].find((s) => s.id === newId) === undefined) {\n                        subtitlesByPath[path].push({ id: newId, ...track });\n                        tracksFound = true;\n                    }\n                }, (theBasename) => {\n                    basename = theBasename;\n                    basenameFound = true;\n                });\n                if (trackDataRequestHandled && (tracksFound || basenameFound)) {\n                    // Only notify additional tracks after the initial request for track info\n                    document.dispatchEvent(new CustomEvent('asbplayer-synced-data', {\n                        detail: {\n                            error: '',\n                            basename: basename,\n                            subtitles: subtitlesByPath[window.location.pathname],\n                        },\n                    }));\n                }\n                return value;\n            };\n        }\n        function garbageCollect() {\n            for (const path of Object.keys(subtitlesByPath)) {\n                if (path !== window.location.pathname) {\n                    delete subtitlesByPath[path];\n                }\n            }\n        }\n        document.addEventListener('asbplayer-get-synced-data', async () => {\n            onRequest?.((track) => {\n                const path = window.location.pathname;\n                if (typeof subtitlesByPath[path] === 'undefined') {\n                    subtitlesByPath[path] = [];\n                }\n                const newId = trackId(track);\n                if (subtitlesByPath[path].find((s) => s.id === newId) === undefined) {\n                    subtitlesByPath[path].push({ id: newId, ...track });\n                }\n            }, (theBasename) => {\n                basename = theBasename;\n                if (!trackDataRequestHandled) {\n                    // Notify basename even if still waiting for subtitle track info\n                    document.dispatchEvent(new CustomEvent('asbplayer-synced-data', {\n                        detail: {\n                            error: '',\n                            basename: basename,\n                            subtitles: undefined,\n                        },\n                    }));\n                }\n            });\n            const ready = () => (!waitForBasename || basename !== '') && window.location.pathname in subtitlesByPath;\n            if (!ready()) {\n                await poll(ready);\n            }\n            document.dispatchEvent(new CustomEvent('asbplayer-synced-data', {\n                detail: {\n                    error: '',\n                    basename: basename,\n                    subtitles: subtitlesByPath[window.location.pathname] ?? [],\n                },\n            }));\n            garbageCollect();\n            trackDataRequestHandled = true;\n        }, false);\n    }, 0);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 6.0.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import { Parser } from 'm3u8-parser';\nimport { inferTracks, trackFromDef } from './util';\nsetTimeout(() => {\n    function baseUrlForUrl(url) {\n        return url.substring(0, url.lastIndexOf('/'));\n    }\n    function m3U8(url) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                // Bypass cache since Chrome might try to use a cached response that doesn't have appropriate CORS headers\n                fetch(url, { cache: 'no-store' })\n                    .then((response) => response.text())\n                    .then((text) => {\n                    const parser = new Parser();\n                    parser.push(text);\n                    parser.end();\n                    resolve(parser.manifest);\n                })\n                    .catch(reject);\n            }, 0);\n        });\n    }\n    function completeM3U8(url) {\n        return new Promise((resolve, reject) => {\n            setTimeout(async () => {\n                try {\n                    const manifest = await m3U8(url);\n                    if (manifest.playlists instanceof Array && manifest.playlists.length > 0) {\n                        const subtitleGroup = manifest.mediaGroups?.SUBTITLES;\n                        if (subtitleGroup && subtitleGroup['sub-main']) {\n                            const tracks = subtitleGroup['sub-main'];\n                            const subtitles = [];\n                            for (const label of Object.keys(tracks)) {\n                                const track = tracks[label];\n                                if (track && typeof track.language === 'string' && typeof track.uri === 'string') {\n                                    const baseUrl = baseUrlForUrl(url);\n                                    const subtitleM3U8Url = `${baseUrl}/${track.uri}`;\n                                    const def = {\n                                        label: label,\n                                        language: track.language,\n                                        url: subtitleM3U8Url,\n                                        extension: 'm3u8',\n                                    };\n                                    subtitles.push(trackFromDef(def));\n                                }\n                            }\n                            resolve(subtitles);\n                            return;\n                        }\n                    }\n                    reject(new Error('Subtitles not found.'));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }, 0);\n        });\n    }\n    function basenameFromDOM() {\n        const titleElements = document.getElementsByClassName('title-field');\n        const subtitleElements = document.getElementsByClassName('subtitle-field');\n        let title = null;\n        let subtitle = null;\n        if (titleElements.length > 0) {\n            title = titleElements[0].textContent;\n        }\n        if (subtitleElements.length > 0) {\n            subtitle = subtitleElements[0].textContent;\n        }\n        if (title === null) {\n            return '';\n        }\n        if (subtitle === null) {\n            return title;\n        }\n        return `${title} ${subtitle}`;\n    }\n    async function basenameFromDOMWithRetries(retries) {\n        const basename = basenameFromDOM();\n        if (retries === 0) {\n            return basename;\n        }\n        if (basename === '') {\n            return new Promise((resolve, reject) => {\n                setTimeout(async () => resolve(await basenameFromDOMWithRetries(retries - 1)), 1000);\n            });\n        }\n        return undefined;\n    }\n    let lastM3U8Url = undefined;\n    const originalParse = JSON.parse;\n    JSON.parse = function () {\n        // @ts-ignore\n        const value = originalParse.apply(this, arguments);\n        if (value?.stream?.sources instanceof Array && value.stream.sources.length > 0) {\n            const url = value.stream.sources[0].complete?.url;\n            if (url) {\n                lastM3U8Url = url;\n            }\n        }\n        return value;\n    };\n    inferTracks({\n        onRequest: async (addTrack, setBasename) => {\n            setBasename((await basenameFromDOMWithRetries(10)) ?? '');\n            if (lastM3U8Url !== undefined) {\n                const tracks = await completeM3U8(lastM3U8Url);\n                for (const track of tracks) {\n                    addTrack(track);\n                }\n            }\n        },\n        waitForBasename: false,\n    });\n}, 0);\n"],"names":["win","window","g","self","module","exports","trackFromDef","def","id","trackId","language","label","url","inferTracks","onJson","onRequest","waitForBasename","setTimeout","subtitlesByPath","basename","trackDataRequestHandled","undefined","originalParse","JSON","parse","value","apply","this","arguments","tracksFound","basenameFound","track","path","location","pathname","newId","find","s","push","theBasename","document","dispatchEvent","CustomEvent","detail","error","subtitles","addEventListener","async","ready","test","timeout","Promise","resolve","reject","t0","Date","now","passed","loopResolve","poll","Object","keys","garbageCollect","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","Stream","listeners","_proto","on","type","listener","off","index","indexOf","slice","splice","trigger","callbacks","length","i","args","Array","_length","_i","dispose","pipe","destination","data","_extends","assign","bind","target","source","decodeB64ToUint8Array","b64Text","decodedString","Buffer","from","toString","array","Uint8Array","charCodeAt","LineStream","constructor","super","buffer","nextNewline","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","parseInt","offset","parseAttributes","attributes","attrs","split","RegExp","attr","replace","ParseStream","customParsers","tagMappers","line","event","trim","reduce","acc","mapper","mappedLine","concat","forEach","newLine","tagType","duration","parseFloat","title","version","number","playlistType","allowed","URI","uri","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","IV","toLowerCase","Uint32Array","PRECISE","subkey","text","addParser","expression","customType","dataParser","segment","addTagMapper","map","camelCaseKeys","str","toUpperCase","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","uris","currentMap","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","part","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options","baseUrlForUrl","lastIndexOf","basenameFromDOMWithRetries","retries","titleElements","getElementsByClassName","subtitleElements","subtitle","textContent","basenameFromDOM","lastM3U8Url","stream","sources","complete","addTrack","setBasename","tracks","fetch","cache","then","response","parser","catch","m3U8","subtitleGroup","SUBTITLES","subtitleM3U8Url","extension","Error"],"sourceRoot":""}